{"version":3,"sources":["components/Nav.js","components/Search.js","components/Photo.js","components/NotFound.js","components/PhotoContainer.js","components/Page404.js","config.js","components/App.js","index.js"],"names":["Nav","props","className","to","onClick","onSearch","Search","state","searchText","onSearchChange","e","setState","target","value","handleSubmit","preventDefault","searchQuery","path","history","push","currentTarget","reset","console","log","this","onSubmit","type","name","placeholder","onChange","ref","input","query","required","fill","height","viewBox","width","xmlns","d","React","Component","Photo","src","url","alt","title","NotFound","PhotoContainer","photos","results","data","length","map","photo","farmId","farm","serverId","server","id","secret","key","Page404","apiKey","App","loading","performSearch","axios","get","then","response","catch","error","basename","exact","render","Fragment","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.99532e4c.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    BrowserRouter,\n    NavLink\n  } from 'react-router-dom'\n\n// App navigation links\n// Show photos by defined subjects: \"pink\", \"cars\", \"dancing\"\n\nlet Nav = (props) => (\n    <BrowserRouter>\n        <nav className=\"main-nav\">\n            <ul>\n                <li>\n                    <NavLink to='/search/pink' onClick={ () => props.onSearch(\"pink\") } >Pink</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/search/cars' onClick={ () => props.onSearch(\"cars\") } >Cars</NavLink>\n                </li>\n                <li>\n                    <NavLink to='/search/dancing' onClick={ () => props.onSearch(\"dancing\") } >Dancing</NavLink>\n                </li>\n            </ul>\n        </nav>\n    </BrowserRouter>\n)\n\n// check propTypes for debugging\nNav.propTypes = {\n    onSearch: PropTypes.func.isRequired\n}\n\nexport default Nav","import React from 'react';\nimport PropTypes from 'prop-types'\n\n\n// Search Component\n// Show series of images by query, for example: \"pink\", \"cats\", \"computers\" etc\n\nclass Search extends React.Component {\n\n    state = {\n        searchText: ''\n      }\n\n    // check propTypes for debugging\n    static propTypes = {\n        onSearch: PropTypes.func.isRequired\n    }\n\n    onSearchChange = e => {\n        this.setState({ searchText: e.target.value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.onSearch(this.state.searchText)      \n        let searchQuery = this.state.searchText\n        let path = `/search/${searchQuery}`\n        this.props.history.push(path)\n        e.currentTarget.reset()\n    }\n\n    render() {\n        console.log(this.state.searchText)\n        return <form className=\"search-form\" onSubmit={this.handleSubmit} >\n            <input type=\"search\"\n                name=\"search\" \n                placeholder=\"Search\"\n                onChange={this.onSearchChange}\n                ref={(input) => this.query = input} //stores reference to input element in this.query variable\n                required></input>\n            <button type=\"submit\" className=\"search-button\">\n                <svg fill=\"#fff\" height=\"24\" viewBox=\"0 0 23 23\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"></path>\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\n                </svg>\n            </button>\n        </form>\n        \n    }\n}\n\nexport default Search\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\n// This component inherits props from PhotoContainer and displays images.\n// Used in PhotoContainer component\n\nlet Photo = (props) => {\n  \n    return  <li>\n        <img src={props.url} alt=\"\" title={props.title} ></img>\n    </li>\n}\n\n// check propTypes for debugging\nPhoto.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired\n}\n\nexport default Photo","import React from 'react';\n\n//User friendly message, when there is no results\n\nlet NotFound = () => {\n    return <li className=\"not-found\">\n        <h3>No Results Found</h3>\n        <p>Your search did not return any results. Please try again.</p>\n    </li>\n}\n\nexport default NotFound","import React from 'react';\nimport PropTypes from 'prop-types'\nimport Photo from './Photo'\nimport NotFound from './NotFound'\n\n// PhotoContainer component inherits props from App.\n// Used to generate series of images on the webpage\n\nlet PhotoContainer = (props) => {\n\n    let generatePhoto = (farmId, serverId, id, secret) => {\n        let url = `https://farm${farmId}.staticflickr.com/${serverId}/${id}_${secret}.jpg`\n        return url\n    }\n\n    let results = props.data\n    let photos\n    if (results.length > 0){\n        photos = results.map( photo => <Photo \n            url={generatePhoto(photo.farm, photo.server, photo.id, photo.secret)}\n            key={photo.id}\n            title={photo.title} />)\n    }   else {\n        photos = <NotFound />   //Shows \"Not Results\" if no relevant photos has been found\n    }\n   \n\n    return <div className=\"photo-container\">\n        <h2>Results</h2>\n        <ul>\n            {photos}\n        </ul>\n    </div>\n}\n\n// check propTypes for debugging\nPhotoContainer.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object).isRequired\n}\n\nexport default PhotoContainer","import React from 'react';\n\nconst Page404 = () => (\n  <div>\n    <i>error_outline</i>\n    <h2>This is  error 404. Page Not Found</h2>\n  </div>\n);\n\nexport default Page404;","const apiKey = '4ac51826a5ca43338f966f96ea7739f7';\n\n//Secret:\n// 8bf23868fc9af45f\n\nexport default apiKey;","import React, { Component } from 'react';\nimport Nav from './Nav'\nimport Search from './Search'\nimport PhotoContainer from './PhotoContainer'\nimport Page404 from './Page404'\nimport axios from 'axios'\nimport apiKey from '../config'\nimport {\n  HashRouter,\n  Route,\n  Switch,\n  Redirect\n} from 'react-router-dom'\n\nexport default class App extends Component {\n  state = {\n    photos: [],\n    loading: true\n  }\n\n  componentDidMount(){\n    this.performSearch()\n  }\n  // Render data of 24 photos from 'flickr.com'\n  performSearch = (query = 'pink') => {\n    axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&format=json&nojsoncallback=1`)\n    .then(response =>{\n      this.setState({\n        photos:response.data.photos.photo,\n        loading: false\n      })\n    })\n    // Catch Error if problem with fetching or parsing\n    .catch(error => {\n      console.log('Error parsing and fetching data', error)\n    })\n  }\n\n  render(){    \n    return <HashRouter basename=\"/react-gallery\">\n      <Switch>\n        <Route exact path=\"/\"> {/* Redirect to /search */}\n          <Redirect to=\"/search\" />\n        </Route>\n\n        {/* Render the page: Search, Nav and PhotoContainer */}\n        <Route  path=\"/search\" render={ history =>\n          <React.Fragment>\n            <Search {...history} onSearch={this.performSearch} />\n            <Nav {...history} onSearch={this.performSearch} /> \n\n            {/* Show \"Loading...\" while rendering photos */}            \n            {\n              (this.state.loading)\n              ? <p>Loading...</p>\n              : <PhotoContainer data={this.state.photos} />\n            }\n          </React.Fragment> \n        } />\n\n        {/* If no paths match any other routes, RENDER the PAGE NOT FOUND component */}         \n        <Route component={Page404} />\n      </Switch>\n    </HashRouter>\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './css/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}